{"version":3,"sources":["components/base-component/index.tsx","components/button/button.tsx","page/intro/service.ts","utils/StringUtils.js","page/intro/index.tsx","page/home/index.tsx","serviceWorker.js","index.js"],"names":["BaseComponent","_len","arguments","length","args","Array","_key","classnames","_len2","_key2","this","classNames","apply","concat","props","className","Object","assign","style","React","Component","Button","e","onClick","react_default","a","createElement","bind","children","Service","getIntroData","Data","StringUtils","processInput","input","isBlank","isEmpty","isNotEmpty","test","isNotBlank","trim","replace","trimToEmpty","startsWith","prefix","indexOf","endsWith","suffix","lastIndexOf","contains","searchSeq","equals","input1","input2","equalsIgnoreCase","toLocaleLowerCase","containsWhitespace","repeat","ch","repeatTimes","result","i","deleteWhitespace","rightPad","size","padStr","leftPad","capitalize","matchStr","toLocaleUpperCase","uncapitalize","swapCase","countMatches","sub","count","index","isAlpha","isAlphaSpace","isAlphanumeric","isAlphanumericSpace","isNumeric","isDecimal","isNegativeDecimal","isPositiveDecimal","isInteger","isPositiveInteger","isNegativeInteger","isNumericSpace","isWhitespace","isAllLowerCase","isAllUpperCase","defaultString","defaultStr","defaultIfBlank","defaultIfEmpty","removeSpecialCharacter","isSpecialCharacterAlphanumeric","IntroComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","intro","head","welcome","tag","setState","button_Button","HomeComponent","contact","window","open","intro_IntroComponent","key","onContact","Boolean","location","hostname","match","document","body","addEventListener","ReactDOM","render","page_home","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.894b337b.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\ninterface ClassDictionary {\n    [id: string]: boolean | undefined | null;\n}\n\ninterface ClassArray extends Array<ClassValue> {}\ntype ClassValue =\n    | string\n    | number\n    | ClassDictionary\n    | ClassArray\n    | undefined\n    | null\n    | boolean;\n\nexport interface BaseProps {\n    /**\n     * 自定义class\n     */\n    className?: string;\n    /**\n     * 自定义样式\n     */\n    style?: React.CSSProperties;\n}\n\nexport default class BaseComponent<\n    TProps = {},\n    TState = {},\n    SS = {}\n> extends React.Component<BaseProps & TProps, TState, SS> {\n\n    classNames(...args: ClassValue[]) {\n        return classnames(args);\n    }\n\n    className(...args: ClassValue[]) {\n        return this.classNames.apply(this, args.concat([this.props.className]));\n    }\n\n    style(args?: React.CSSProperties) {\n        return Object.assign({}, args, this.props.style);\n    }\n    \n}","import React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport './button.scss';\r\n\r\nexport interface ButtonProps {\r\n    onClick?: Function\r\n}\r\n\r\nexport default class Button extends BaseComponent<ButtonProps> {\r\n\r\n    onClick(e: React.SyntheticEvent): void {\r\n        this.props.onClick && this.props.onClick(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button style={this.style()} className={this.className(\"base-btn\")} onClick={this.onClick.bind(this)}>\r\n                <span>{this.props.children}</span>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n","import BaseComponent from '../../components/base-component';\r\nimport {Intro} from './interface';\r\nimport Data from '../../data/intro.json';\r\n\r\nconst Service = {\r\n\r\n    getIntroData():Intro {\r\n        let intro : Intro = Data;\r\n        return intro\r\n    }\r\n}\r\n\r\nexport default Service;\r\n","const StringUtils = {\r\n\tprocessInput: function (input) {\r\n\t\tif (this.isBlank(input)) {\r\n\t\t\tinput = \"\"\r\n\t\t}\r\n\t\treturn input\r\n\t},\r\n\tisEmpty: function (input) {\r\n\t\treturn input === null || input === '';\r\n\t},\r\n\tisNotEmpty: function (input) {\r\n\t\treturn !this.isEmpty(input);\r\n\t},\r\n\tisBlank: function (input) {\r\n\t\treturn input == null || /^\\s*$/.test(input);\r\n\t},\r\n\tisNotBlank: function (input) {\r\n\t\treturn !this.isBlank(input);\r\n\t},\r\n\ttrim: function (input) {\r\n\t\treturn input.replace(/^\\s+|\\s+$/, '');\r\n\t},\r\n\ttrimToEmpty: function (input) {\r\n\t\treturn input == null ? \"\" : this.trim(input);\r\n\t},\r\n\tstartsWith: function (input, prefix) {\r\n\t\treturn input.indexOf(prefix) === 0;\r\n\t},\r\n\tendsWith: function (input, suffix) {\r\n\t\treturn input.lastIndexOf(suffix) === 0;\r\n\t},\r\n\tcontains: function (input, searchSeq) {\r\n\t\treturn input.indexOf(searchSeq) >= 0;\r\n\t},\r\n\tequals: function (input1, input2) {\r\n\t\treturn input1 === input2;\r\n\t},\r\n\tequalsIgnoreCase: function (input1, input2) {\r\n\t\treturn input1.toLocaleLowerCase() === input2.toLocaleLowerCase();\r\n\t},\r\n\tcontainsWhitespace: function (input) {\r\n\t\treturn this.contains(input, ' ');\r\n\t},\r\n\t//生成指定个数的字符\r\n\trepeat: function (ch, repeatTimes) {\r\n\t\tvar result = \"\";\r\n\t\tfor (var i = 0; i < repeatTimes; i++) {\r\n\t\t\tresult += ch;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tdeleteWhitespace: function (input) {\r\n\t\treturn input.replace(/\\s+/g, '');\r\n\t},\r\n\trightPad: function (input, size, padStr) {\r\n\t\treturn input + this.repeat(padStr, size);\r\n\t},\r\n\tleftPad: function (input, size, padStr) {\r\n\t\treturn this.repeat(padStr, size) + input;\r\n\t},\r\n\t//首小写字母转大写\r\n\tcapitalize: function (input) {\r\n\t\tlet strLen = 0;\r\n\t\tif (input == null || (strLen = input.length) == 0) {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\treturn input.replace(/^[a-z]/, function (matchStr) {\r\n\t\t\treturn matchStr.toLocaleUpperCase();\r\n\t\t});\r\n\t},\r\n\t//首大写字母转小写\r\n\tuncapitalize: function (input) {\r\n\t\tvar strLen = 0;\r\n\t\tif (input == null || (strLen = input.length) == 0) {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\treturn input.replace(/^[A-Z]/, function (matchStr) {\r\n\t\t\treturn matchStr.toLocaleLowerCase();\r\n\t\t});\r\n\t},\r\n\t//大写转小写,小写转大写\r\n\tswapCase: function (input) {\r\n\t\treturn input.replace(/[a-z]/ig, function (matchStr) {\r\n\t\t\tif (matchStr >= 'A' && matchStr <= 'Z') {\r\n\t\t\t\treturn matchStr.toLocaleLowerCase();\r\n\t\t\t} else if (matchStr >= 'a' && matchStr <= 'z') {\r\n\t\t\t\treturn matchStr.toLocaleUpperCase();\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t//统计含有的子字符串的个数\r\n\tcountMatches: function (input, sub) {\r\n\t\tif (this.isEmpty(input) || this.isEmpty(sub)) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar count = 0;\r\n\t\tvar index = 0;\r\n\t\twhile ((index = input.indexOf(sub, index)) != -1) {\r\n\t\t\tindex += sub.length;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t},\r\n\t//只包含字母\r\n\tisAlpha: function (input) {\r\n\t\treturn /^[a-z]+$/i.test(input);\r\n\t},\r\n\t//只包含字母、空格\r\n\tisAlphaSpace: function (input) {\r\n\t\treturn /^[a-z\\s]*$/i.test(input);\r\n\t},\r\n\t//只包含字母、数字\r\n\tisAlphanumeric: function (input) {\r\n\t\treturn /^[a-z0-9]+$/i.test(input);\r\n\t},\r\n\t//只包含字母、数字和空格\r\n\tisAlphanumericSpace: function (input) {\r\n\t\treturn /^[a-z0-9\\s]*$/i.test(input);\r\n\t},\r\n\t//数字\r\n\tisNumeric: function (input) {\r\n\t\treturn /^(?:[1-9]\\d*|0)(?:\\.\\d+)?$/.test(input);\r\n\t},\r\n\t//小数\r\n\tisDecimal: function (input) {\r\n\t\treturn /^[-+]?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\r\n\t},\r\n\t//负小数\r\n\tisNegativeDecimal: function (input) {\r\n\t\treturn /^\\-?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\r\n\t},\r\n\t//正小数\r\n\tisPositiveDecimal: function (input) {\r\n\t\treturn /^\\+?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\r\n\t},\r\n\t//整数\r\n\tisInteger: function (input) {\r\n\t\treturn /^[-+]?(?:0|[1-9]\\d*)$/.test(input);\r\n\t},\r\n\t//正整数\r\n\tisPositiveInteger: function (input) {\r\n\t\treturn /^\\+?(?:0|[1-9]\\d*)$/.test(input);\r\n\t},\r\n\t//负整数\r\n\tisNegativeInteger: function (input) {\r\n\t\treturn /^\\-?(?:0|[1-9]\\d*)$/.test(input);\r\n\t},\r\n\t//只包含数字和空格\r\n\tisNumericSpace: function (input) {\r\n\t\treturn /^[\\d\\s]*$/.test(input);\r\n\t},\r\n\tisWhitespace: function (input) {\r\n\t\treturn /^\\s*$/.test(input);\r\n\t},\r\n\tisAllLowerCase: function (input) {\r\n\t\treturn /^[a-z]+$/.test(input);\r\n\t},\r\n\tisAllUpperCase: function (input) {\r\n\t\treturn /^[A-Z]+$/.test(input);\r\n\t},\r\n\tdefaultString: function (input, defaultStr) {\r\n\t\treturn input == null ? defaultStr : input;\r\n\t},\r\n\tdefaultIfBlank: function (input, defaultStr) {\r\n\t\treturn this.isBlank(input) ? defaultStr : input;\r\n\t},\r\n\tdefaultIfEmpty: function (input, defaultStr) {\r\n\t\treturn this.isEmpty(input) ? defaultStr : input;\r\n\t},\r\n\t//删掉特殊字符(英文状态下)\r\n\tremoveSpecialCharacter: function (input) {\r\n\t\treturn input.replace(/[!-/:-@\\[-`{-~]/g, \"\");\r\n\t},\r\n\t//只包含特殊字符、数字和字母(不包括空格,若想包括空格,改为[ -~])\r\n\tisSpecialCharacterAlphanumeric: function (input) {\r\n\t\treturn /^[!-~]+$/.test(input);\r\n\t},\r\n};\r\nexport default StringUtils\r\n","/**\r\n * Created by liuyuqin on 2019/1/24.\r\n */\r\nimport React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport Button from '../../components/button/button';\r\nimport { Intro } from './interface';\r\nimport Service from './service';\r\nimport StringUtils from '../../utils/StringUtils';\r\nimport './index.scss'\r\n\r\ninterface IntroProps {\r\n\r\n}\r\n\r\ninterface IntroState {\r\n    intro: Intro\r\n}\r\n\r\nexport default class IntroComponent extends BaseComponent<IntroProps, IntroState> {\r\n\r\n    constructor(props: IntroProps) {\r\n        super(props)\r\n        this.state = {\r\n            intro: {\r\n                head: \"\",\r\n                welcome: \"\",\r\n                tag: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            intro: Service.getIntroData()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"intro\">\r\n                <div className=\"intro-overlay\"></div>\r\n                <div className=\"intro-view\">\r\n                    <div className=\"head\">{StringUtils.processInput(this.state.intro.head)}</div>\r\n                    <div className=\"welcome\">{StringUtils.processInput(this.state.intro.welcome)}</div>\r\n                    <div className=\"tag\">\r\n                        <div className=\"tag-icon left\"></div>\r\n                        <div className=\"tag-item\">{StringUtils.processInput(this.state.intro.tag[0])}</div>\r\n                        <div className=\"divide\" />\r\n                        <div className=\"tag-item\">{StringUtils.processInput(this.state.intro.tag[1])}</div>\r\n                        <div className=\"tag-icon right\"></div>\r\n                    </div>\r\n                    <Button className=\"more-btn\">MORE ABOUT ME</Button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport Intro from '../intro';\r\nimport './index.scss'\r\n\r\ninterface HomeProps {\r\n\r\n}\r\n\r\ninterface HomeState {\r\n\r\n}\r\n\r\nclass HomeComponent extends BaseComponent<HomeProps, HomeState> {\r\n\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    onContact(contact: String) {\r\n        switch (contact) {\r\n            case \"qq\": {\r\n                break;\r\n            }\r\n            case \"wechat\": {\r\n                break;\r\n            }\r\n            case \"github\": {\r\n                window.open(\"https://github.com/liuyuqin1991\");\r\n                break;\r\n            }\r\n            case \"csdn\": {\r\n                window.open(\"https://blog.csdn.net/liuyuqin1991\");\r\n                break;\r\n            }\r\n            case \"youku\": {\r\n                window.open(\"\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <header className=\"header\">\r\n                    <div className=\"top-bar\"></div>\r\n                </header>\r\n                <Intro />\r\n                <footer className=\"footer\">\r\n                    <ul className=\"menu\">\r\n                        <li key=\"menu-about\" onClick={this.onContact.bind(this, \"qq\")}>\r\n                            <div className=\"icon about\"></div>\r\n                            <div className=\"label\">关于</div>\r\n                        </li>\r\n                        <li key=\"menu-skills\" onClick={this.onContact.bind(this, \"wechat\")}>\r\n                            <div className=\"icon skills\"></div>\r\n                            <div className=\"label\">能力</div>\r\n                        </li>\r\n                        <li key=\"menu-work\" onClick={this.onContact.bind(this, \"github\")}>\r\n                            <div className=\"icon work\"></div>\r\n                            <div className=\"label\">工作</div>\r\n                        </li>\r\n                        <li key=\"menu-music\" onClick={this.onContact.bind(this, \"csdn\")}>\r\n                            <div className=\"icon music\"></div>\r\n                            <div className=\"label\">音乐</div>\r\n                        </li>\r\n                        <li key=\"menu-contact\" onClick={this.onContact.bind(this, \"youku\")}>\r\n                            <div className=\"icon contact\"></div>\r\n                            <div className=\"label\">联系</div>\r\n                        </li>\r\n                    </ul>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './page/home';\nimport * as serviceWorker from './serviceWorker';\n\ndocument.body.addEventListener('touchstart', function () { });\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}