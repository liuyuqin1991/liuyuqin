{"version":3,"sources":["components/base-component/index.tsx","components/button/button.tsx","components/footer/footer.tsx","components/animation/animation.tsx","page/home/index.tsx","components/tag/tag.tsx","components/header/header.tsx","page/blog/index.tsx","serviceWorker.js","index.js"],"names":["BaseComponent","_len","arguments","length","args","Array","_key","classnames","_len2","_key2","this","classNames","apply","concat","props","className","Object","assign","style","React","Component","Button","e","onClick","react_default","a","createElement","bind","children","FooterComponent","contact","window","open","key","onContact","AnimationView","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isClick","_this2","setState","setTimeout","time","_this3","onAnimationView","is-click","HomeComponent","animation_AnimationView","button_Button","Link","to","footer_FooterComponent","Tag","tag","label","HeaderComponent","title","BlogComponent","blogList","BlogData","blogs","map","item","index","tags","t","n","tag_Tag","href","link","date","header_HeaderComponent","renderItem","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","Switch","Route","path","component","Blog","exact","Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03d80b01.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\ninterface ClassDictionary {\n    [id: string]: boolean | undefined | null;\n}\n\ninterface ClassArray extends Array<ClassValue> {}\ntype ClassValue =\n    | string\n    | number\n    | ClassDictionary\n    | ClassArray\n    | undefined\n    | null\n    | boolean;\n\nexport interface BaseProps {\n    /**\n     * 自定义class\n     */\n    className?: string;\n    /**\n     * 自定义样式\n     */\n    style?: React.CSSProperties;\n}\n\nexport default class BaseComponent<\n    TProps = {},\n    TState = {},\n    SS = {}\n> extends React.Component<BaseProps & TProps, TState, SS> {\n\n    classNames(...args: ClassValue[]) {\n        return classnames(args);\n    }\n\n    className(...args: ClassValue[]) {\n        return this.classNames.apply(this, args.concat([this.props.className]));\n    }\n\n    style(args?: React.CSSProperties) {\n        return Object.assign({}, args, this.props.style);\n    }\n    \n}","import React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport './button.scss';\r\n\r\nexport interface ButtonProps {\r\n    onClick?: Function\r\n}\r\n\r\nexport default class Button extends BaseComponent<ButtonProps> {\r\n\r\n    onClick(e: React.SyntheticEvent): void {\r\n        this.props.onClick && this.props.onClick(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button style={this.style()} className={this.className(\"base-btn\")} onClick={this.onClick.bind(this)}>\r\n                <span>{this.props.children}</span>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport './footer.scss';\r\n\r\nexport default class FooterComponent extends BaseComponent {\r\n\r\n    onContact(contact: String): void {\r\n        switch (contact) {\r\n            case \"qq\": {\r\n                break;\r\n            }\r\n            case \"wechat\": {\r\n                break;\r\n            }\r\n            case \"github\": {\r\n                window.open(\"https://github.com/liuyuqin1991\");\r\n                break;\r\n            }\r\n            case \"csdn\": {\r\n                window.open(\"https://blog.csdn.net/liuyuqin1991\");\r\n                break;\r\n            }\r\n            case \"youku\": {\r\n                window.open(\"\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <footer className=\"footer\">\r\n            <ul className=\"menu\">\r\n                <li key=\"menu-about\" onClick={this.onContact.bind(this, \"qq\")}>\r\n                    <div className=\"icon about\"></div>\r\n                    <div className=\"label\">关于</div>\r\n                </li>\r\n                <li key=\"menu-skills\" onClick={this.onContact.bind(this, \"wechat\")}>\r\n                    <div className=\"icon skills\"></div>\r\n                    <div className=\"label\">能力</div>\r\n                </li>\r\n                <li key=\"menu-work\" onClick={this.onContact.bind(this, \"github\")}>\r\n                    <div className=\"icon work\"></div>\r\n                    <div className=\"label\">工作</div>\r\n                </li>\r\n                <li key=\"menu-music\" onClick={this.onContact.bind(this, \"csdn\")}>\r\n                    <div className=\"icon music\"></div>\r\n                    <div className=\"label\">音乐</div>\r\n                </li>\r\n                <li key=\"menu-contact\" onClick={this.onContact.bind(this, \"youku\")}>\r\n                    <div className=\"icon contact\"></div>\r\n                    <div className=\"label\">联系</div>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    }\r\n}","import React from 'react';\r\nimport BaseComponent from '../base-component';\r\nimport './animation.scss';\r\n\r\ninterface AnimationViewProps {\r\n    time?: number,\r\n}\r\n\r\ninterface AnimationViewState {\r\n    isClick: boolean,\r\n}\r\n\r\nexport default class AnimationView extends BaseComponent<AnimationViewProps, AnimationViewState> {\r\n\r\n\r\n    constructor(props: AnimationViewProps) {\r\n        super(props);\r\n        this.state = {\r\n            isClick: false\r\n        }\r\n    }\r\n\r\n    onAnimationView(): void {\r\n        this.setState({ isClick: true })\r\n        setTimeout(() => { this.setState({ isClick: false }) }, this.props.time || 1000);//延迟关闭动画 移除open类\r\n    }\r\n\r\n\r\n    render() {\r\n        let events;\r\n        this.props.className ? events = { onClick: () => { this.onAnimationView.bind(this) } } : {};\r\n        return (\r\n            <div className={this.className({ 'is-click': this.state.isClick })} onClick={this.onAnimationView.bind(this)}>\r\n                {this.props.children || null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport Button from '../../components/button/button';\r\nimport Footer from '../../components/footer/footer';\r\nimport AnimationView from '../../components/animation/animation';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss'\r\n\r\nclass HomeComponent extends BaseComponent {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <header className=\"header\">\r\n                    <div className=\"top-bar\"></div>\r\n                </header>\r\n                <div className=\"content\">\r\n                    <div className=\"content-overlay\"></div>\r\n                    <div className=\"content-view\">\r\n                        <div className=\"content-head\">Hello  World</div>\r\n                        <div className=\"content-welcome\">welcome</div>\r\n                        <div className=\"content-description\">\r\n                            <AnimationView className=\"heart-beta\">\r\n                                <div className=\"description-icon left\"></div>\r\n                            </AnimationView>\r\n                            <div className=\"description-item\">写代码</div>\r\n                            <div className=\"divide\" />\r\n                            <div className=\"description-item\">玩音乐</div>\r\n                            <AnimationView className=\"heart-beta\">\r\n                                <div className=\"description-icon right\"></div>\r\n                            </AnimationView>\r\n                        </div>\r\n                        <Button className=\"more-btn\"><Link to=\"/blog\">MORE ABOUT ME</Link></Button>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeComponent;","import React from 'react';\r\nimport BaseComponent from '../base-component';\r\nimport './tag.scss';\r\n\r\nexport interface TagProps {\r\n    label: string\r\n}\r\n\r\nexport default class Tag extends BaseComponent<TagProps> {\r\n\r\n    render() {\r\n        const tagStyle = {\r\n            \"tag\": true,\r\n        }\r\n        return (\r\n            <div style={this.style()} className={this.classNames(tagStyle)}>{this.props.label}</div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport BaseComponent from '../base-component';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.scss';\r\n\r\ninterface HeaderProps {\r\n    title: string\r\n}\r\n\r\nexport default class HeaderComponent extends BaseComponent<HeaderProps> {\r\n\r\n    render() {\r\n        return <header className=\"header\">\r\n            <Link to=\"/\" className=\"link-text\"><div className=\"homepage-btn\"></div></Link>\r\n            <div className=\"header-title\">\r\n                {this.props.title}\r\n            </div>\r\n        </header>\r\n    }\r\n}","import React from 'react';\r\nimport BaseComponent from '../../components/base-component';\r\nimport Tag from '../../components/tag/tag';\r\nimport Header from '../../components/header/header';\r\nimport { Blog } from './interface';\r\nimport BlogData from '../../data/blog.json';\r\nimport './index.scss'\r\n\r\ninterface BlogProps {\r\n\r\n}\r\n\r\ninterface BlogState {\r\n    blogList: Array<Blog>\r\n}\r\n\r\n\r\nclass BlogComponent extends BaseComponent<BlogProps, BlogState> {\r\n\r\n\r\n    constructor(props: BlogProps) {\r\n        super(props)\r\n        this.state = {\r\n            blogList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            blogList: BlogData.blogList\r\n        })\r\n    }\r\n\r\n    renderItem(): JSX.Element {\r\n        const blogs = this.state.blogList.map((item, index) => {\r\n            const tags = item.tag.map((t, n) => {\r\n                return <Tag label={t} />\r\n            });\r\n            return (<li className=\"blog-li\">\r\n                <div className=\"item-view\">\r\n                    <div className=\"title\">\r\n                        <a href={item.link}>{item.title}</a>\r\n                    </div>\r\n                    <div className=\"tag-view\">\r\n                        {tags}\r\n                    </div>\r\n                    <div className=\"date\">\r\n                        {item.date}\r\n                    </div>\r\n                </div>\r\n            </li>)\r\n        })\r\n        return (<ul className=\"blog-ul\">\r\n            {blogs}\r\n        </ul >)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"blog\">\r\n                <div className=\"blog-overlay\"></div>\r\n                <div className=\"line-center-axis\"></div>\r\n                <Header title=\"我的博客\"></Header>\r\n                <div className=\"bolg-footer\"></div>\r\n                {this.renderItem()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './page/home';\nimport Blog from './page/blog';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/blog\" component={Blog} />\n            <Route exact path=\"/\" component={Home} />\n        </Switch>\n    </BrowserRouter>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}